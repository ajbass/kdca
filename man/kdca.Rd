% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kdca.R
\name{kdca}
\alias{kdca}
\title{Kernel-based Differential Co-expression Analysis}
\usage{
kdca(
  x,
  y,
  type_x = c("categorical", "continuous"),
  mean_adjust = matrix(rep(1, nrow(x), ncol = 1)),
  var_adjust = matrix(rep(1, nrow(x), ncol = 1)),
  perm.its = 1000,
  RINT = FALSE,
  max.rank = NULL
)
}
\arguments{
\item{x}{The risk factor(s) of interest (n observations by p variables).}

\item{y}{A matrix of genes in a pathway (n observations by k genes).}

\item{type_x}{Specify the variable type for the risk factor x. Either "categorical" or "continuous". If there are multiple risk factors then set to "continuous".}

\item{mean_adjust}{A matrix of covariates to adjust for mean effects.}

\item{var_adjust}{A matrix of covariates to adjust on the variance scale.}

\item{perm.its}{The number of permutations. The default is 1000.}

\item{RINT}{Apply rank-based inverse normal transform to the residuals. Default is FALSE.}

\item{max.rank}{Specify rank of kernel matrices. Default is NULL. While setting a low rank can decrease the computational time, the signal may be missed.}
}
\value{
A data frame containing:
\item{kernel}{Kernels tested}
\item{pvalues}{Empirical p-values.}
}
\description{
Given a risk factor of interest, the \code{kdca} function tests for
differential co-expression of a pathway. 
This function implements three kernels (linear, projection, and Guassian) and 
then aggregates information across the kernels to maximize power.
}
\details{
Please see our pre-print for additional details.
}
\examples{
# set seed
set.seed(123)

# Generate random categorical risk factor and pathway
x <- matrix(rbinom(50, size = 1, prob = 0.5), ncol = 1)
y <- matrix(rnorm(50 * 10), ncol = 10)

kdca.out <- kdca(x, y, type_x = "categorical")

}
